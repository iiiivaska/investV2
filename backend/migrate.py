#!/usr/bin/env python3
"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏—è–º–∏ Alembic –≤ –ø—Ä–æ–µ–∫—Ç–µ InvestV2

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python migrate.py status      # –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
    python migrate.py upgrade     # –ü—Ä–∏–º–µ–Ω–∏—Ç—å –≤—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏
    python migrate.py downgrade   # –û—Ç–∫–∞—Ç–∏—Ç—å –æ–¥–Ω—É –º–∏–≥—Ä–∞—Ü–∏—é
    python migrate.py create "–û–ø–∏—Å–∞–Ω–∏–µ"  # –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –º–∏–≥—Ä–∞—Ü–∏—é
"""

import sys
import subprocess
from pathlib import Path


def run_alembic_command(command: list[str]) -> int:
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É Alembic –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ migrations"""
    try:
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é migrations
        migrations_dir = Path(__file__).parent / "migrations"
        if not migrations_dir.exists():
            print("‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è migrations –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return 1
            
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—É –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ migrations
        result = subprocess.run(
            ['alembic'] + command, 
            cwd=migrations_dir,
            check=False
        )
        return result.returncode
    except FileNotFoundError:
        print("‚ùå Alembic –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ.")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: source venv/bin/activate")
        return 1


def show_status():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π"""
    print("üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π:")
    print("-" * 40)
    run_alembic_command(['current'])
    print()
    print("üìú –ò—Å—Ç–æ—Ä–∏—è –º–∏–≥—Ä–∞—Ü–∏–π:")
    print("-" * 40)
    run_alembic_command(['history', '--verbose'])


def upgrade_migrations():
    """–ü—Ä–∏–º–µ–Ω—è–µ—Ç –≤—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏"""
    print("‚¨ÜÔ∏è –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...")
    return run_alembic_command(['upgrade', 'head'])


def downgrade_migrations():
    """–û—Ç–∫–∞—Ç—ã–≤–∞–µ—Ç –æ–¥–Ω—É –º–∏–≥—Ä–∞—Ü–∏—é"""
    print("‚¨áÔ∏è –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–π...")
    return run_alembic_command(['downgrade', '-1'])


def create_migration(message: str):
    """–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –º–∏–≥—Ä–∞—Ü–∏—é"""
    print(f"üìù –°–æ–∑–¥–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏: {message}")
    return run_alembic_command(['revision', '--autogenerate', '-m', message])


def show_help():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É"""
    print(__doc__)


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) < 2:
        show_help()
        return 1

    command = sys.argv[1].lower()

    if command == 'status':
        show_status()
    elif command == 'upgrade':
        return upgrade_migrations()
    elif command == 'downgrade':
        return downgrade_migrations()
    elif command == 'create':
        if len(sys.argv) < 3:
            print("‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏")
            print("üí° –ü—Ä–∏–º–µ—Ä: python migrate.py create 'Add new field'")
            return 1
        message = sys.argv[2]
        return create_migration(message)
    elif command in ['help', '--help', '-h']:
        show_help()
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")
        show_help()
        return 1

    return 0


if __name__ == '__main__':
    sys.exit(main())
