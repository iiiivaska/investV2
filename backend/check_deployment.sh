#!/bin/bash

# ========================================
# –ü–†–û–í–ï–†–ö–ê –ì–û–¢–û–í–ù–û–°–¢–ò –ö –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Æ INVESTV2
# ========================================

echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é InvestV2..."
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker
echo "üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..."
if command -v docker &> /dev/null; then
    DOCKER_VERSION=$(docker --version)
    echo "‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $DOCKER_VERSION"
else
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker Compose
echo "üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose..."
if command -v docker-compose &> /dev/null; then
    COMPOSE_VERSION=$(docker-compose --version)
    echo "‚úÖ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $COMPOSE_VERSION"
else
    echo "‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –≤–Ω–µ—à–Ω–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
echo "üóÑÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –≤–Ω–µ—à–Ω–µ–π –ë–î..."
if docker run --rm postgres:15-alpine psql "postgresql://gen_user:%1umkt{~ZFy#m4@192.168.0.4:5432/investv2" -c "SELECT 1;" > /dev/null 2>&1; then
    echo "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –≤–Ω–µ—à–Ω–µ–π –ë–î —É—Å–ø–µ—à–Ω–æ"
else
    echo "‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –≤–Ω–µ—à–Ω–µ–π –ë–î"
    echo "   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:"
    echo "   - –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞ 192.168.0.4"
    echo "   - –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
    echo "   - –û—Ç–∫—Ä—ã—Ç—ã–π –ø–æ—Ä—Ç 5432"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
echo "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤..."
REQUIRED_FILES=("docker-compose.yml" "Dockerfile" "requirements.txt" "env.production")

for file in "${REQUIRED_FILES[@]}"; do
    if [ -f "$file" ]; then
        echo "‚úÖ $file –Ω–∞–π–¥–µ–Ω"
    else
        echo "‚ùå $file –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
echo "‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
if [ -f ".env" ]; then
    echo "‚úÖ .env —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º SECRET_KEY
    if grep -q "your-super-secret-production-key-change-this-immediately" .env; then
        echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: SECRET_KEY –Ω–µ –∏–∑–º–µ–Ω–µ–Ω! –ò–∑–º–µ–Ω–∏—Ç–µ –µ–≥–æ –ø–µ—Ä–µ–¥ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ–º"
    else
        echo "‚úÖ SECRET_KEY –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    fi
else
    echo "‚ö†Ô∏è  .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –∏–∑ env.production"
    echo "   cp env.production .env"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —Å–∫—Ä–∏–ø—Ç—ã
echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤..."
SCRIPTS=("deploy.sh" "dev.sh" "update.sh" "migrate_production.sh")

for script in "${SCRIPTS[@]}"; do
    if [ -f "$script" ]; then
        if [ -x "$script" ]; then
            echo "‚úÖ $script –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π"
        else
            echo "‚ö†Ô∏è  $script –Ω–∞–π–¥–µ–Ω, –Ω–æ –Ω–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π"
            echo "   chmod +x $script"
        fi
    else
        echo "‚ùå $script –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ—Ä—Ç–æ–≤
echo "üîå –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤..."
if netstat -tuln 2>/dev/null | grep -q ":8000 "; then
    echo "‚ö†Ô∏è  –ü–æ—Ä—Ç 8000 —É–∂–µ –∑–∞–Ω—è—Ç"
else
    echo "‚úÖ –ü–æ—Ä—Ç 8000 —Å–≤–æ–±–æ–¥–µ–Ω"
fi

if netstat -tuln 2>/dev/null | grep -q ":6379 "; then
    echo "‚ö†Ô∏è  –ü–æ—Ä—Ç 6379 —É–∂–µ –∑–∞–Ω—è—Ç"
else
    echo "‚úÖ –ü–æ—Ä—Ç 6379 —Å–≤–æ–±–æ–¥–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ
echo "üíæ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞..."
FREE_SPACE=$(df -h . | awk 'NR==2 {print $4}')
echo "‚úÖ –°–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ: $FREE_SPACE"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–º—è—Ç—å
echo "üß† –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–º—è—Ç–∏..."
TOTAL_MEM=$(free -h | awk 'NR==2{print $2}')
FREE_MEM=$(free -h | awk 'NR==2{print $7}')
echo "‚úÖ –û–±—â–∞—è –ø–∞–º—è—Ç—å: $TOTAL_MEM, –°–≤–æ–±–æ–¥–Ω–∞—è: $FREE_MEM"

echo ""
echo "üéØ –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏:"

# –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
TOTAL_CHECKS=0
PASSED_CHECKS=0

# Docker –∏ Docker Compose
TOTAL_CHECKS=$((TOTAL_CHECKS + 2))
if command -v docker &> /dev/null && command -v docker-compose &> /dev/null; then
    PASSED_CHECKS=$((PASSED_CHECKS + 2))
fi

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
TOTAL_CHECKS=$((TOTAL_CHECKS + 1))
if docker run --rm postgres:15-alpine psql "postgresql://gen_user:%1umkt{~ZFy#m4@192.168.0.4:5432/investv2" -c "SELECT 1;" > /dev/null 2>&1; then
    PASSED_CHECKS=$((PASSED_CHECKS + 1))
fi

# –§–∞–π–ª—ã
TOTAL_CHECKS=$((TOTAL_CHECKS + 4))
for file in "${REQUIRED_FILES[@]}"; do
    if [ -f "$file" ]; then
        PASSED_CHECKS=$((PASSED_CHECKS + 1))
    fi
done

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
PERCENTAGE=$((PASSED_CHECKS * 100 / TOTAL_CHECKS))

if [ $PERCENTAGE -eq 100 ]; then
    echo "üéâ –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: 100% - –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é!"
    echo ""
    echo "üöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    echo "   ./deploy.sh"
elif [ $PERCENTAGE -ge 80 ]; then
    echo "‚úÖ –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: ${PERCENTAGE}% - –ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è"
elif [ $PERCENTAGE -ge 60 ]; then
    echo "‚ö†Ô∏è  –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: ${PERCENTAGE}% - –¢—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏"
else
    echo "‚ùå –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: ${PERCENTAGE}% - –¢—Ä–µ–±—É–µ—Ç —Å–µ—Ä—å–µ–∑–Ω–æ–π –¥–æ—Ä–∞–±–æ—Ç–∫–∏"
fi

echo ""
echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: $PASSED_CHECKS –∏–∑ $TOTAL_CHECKS –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–æ"
